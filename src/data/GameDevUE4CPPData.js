export default [
    {
        listElement: 'Динамическая и статическая типизация',
        subListElement: 'Что такое динамическая и статическая типизация?',
        answer: 'Статически типизированные языки – это языки, в которых проверка типа совершается во время компиляции, а в динамически типизированных – в рантайме. Поскольку C++ является статически типизированным языком, пользователь должен сообщить компилятору, с каким типом объекта он работает во время компиляции.'
    },
    {
        listElement: 'Делегат',
        subListElement: 'Что подразумевается под делегатом? ',
        answer: 'Делегат – это объект, действующий от имени, или в паре с другим объектом, обнаружившим событие во время выполнения программы. Зачастую это просто указатель на функцию, использующую обратные вызовы.\n' +
            'Делегаты могут быть сохранены пользователем. Как правило, они сохраняются автоматически, поэтому можно избежать лишних циклов сохранения и не производить запись повторно.\n   '
    },
    {
        listElement: 'Volatile и mutable',
        subListElement: 'Что означают ключевые слова volatile и mutable? ',
        answer: 'volatile сообщает компилятору, что переменная может измениться без его ведома. Эти переменные не кэшируются компилятором и поэтому всегда считываются из памяти.\n' +
            'mutable может использоваться для переменных класса. Такие переменные могут изменяться изнутри функций класса.\n'
    },
    {
        listElement: 'Виртуальная функция',
        subListElement: 'Что такое виртуальная функция?',
        answer: 'Виртуальная функция – это метод, который используется в рантайме для замены реализованного функционала, предоставляемого базовым классом. Виртуальные функции всегда используются с наследованием и вызываются в соответствии с типом объекта, на который указывает или ссылается объект, а не в соответствии с типом указателя или ссылки.\n' +
            'Ключевое слово virtual используется для создания виртуального метода.\n'
    },
    {
        listElement: 'Массив и список',
        subListElement: 'В чем разница между массивом и списком?',
        answer: 'Массив – это набор однородных элементов, а список – разнородных. Распределение памяти массива всегда статическое и непрерывное, а в списке все это динамическое и рандомное. В случае с массивами пользователю не нужно управлять выделением памяти, а при использовании списков придется.\n'
    },
]
